{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set classes = [
node.bundle|clean_class,
node.isPromoted() ? 'is-promoted',
node.isSticky() ? 'is-sticky',
not node.isPublished() ? 'is-unpublished',
view_mode ? view_mode|clean_class,
'clearfix',
] %}
<article{{ attributes.addClass(classes) }}>
  <div class="container">
    {{ title_prefix }}
    {% if not page %}
      <h2{{ title_attributes }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {{ title_suffix }}

    {% if display_submitted %}
      <footer>
        {{ author_picture }}
        <div{{ author_attributes.addClass('author') }}>
          {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
          {{ metadata }}
        </div>
      </footer>
    {% endif %}
  </div>
  <div{{ content_attributes.addClass('content') }}>
    <div class="container">
      <div class="row">
        <div class="col-sm-6">
          {{ content.field_vih_course_periods }}
          {{ content.body }}
        </div>
        <div class="col-sm-6">
          <h4 class="long-course-heading-sidebar">{{ 'Kom ud at rejse'|trans }}:</h4>
          <h6 class="color-gray">{{ 'Skæddersy dit ophold paå tværs af fagpakker'|trans }}</h5>

            <div class="row">
              {% for travel_class in content.travel_classes %}
                <div class="col-sm-6">
                  {{ travel_class }}
                </div>
              {% endfor %}
            </div>
            <h4 class="long-course-heading-sidebar">{{ 'Fagpakker'|trans }}:</h4>
            <h6 class="color-gray">{{ 'Skæddersy dit ophold på tværs af fagpakker'|trans }}</h6>

            <div class="panel-group" id="accordionClassPackages">
              <div class="panel-heading blue"><h4 class="panel-title"><a>{{ 'Fagpakker'|trans }}</a></h4></div>

              {% for class_package_id,class_package in content.classes_packages %}
                <div class="panel panel-default white-border-bottom">
                  <div class="panel-heading accordion-{{ class_package.term['#taxonomy_term'].field_vih_class_package_color.value }}">
                    <h4 class="panel-title">
                      <a class="accordion-toggle collapsed"
                         data-toggle="collapse"
                         data-parent="#accordionClassPackages"
                         href="#collapseClassPackage-{{ class_package_id }}">{{ class_package.name }}</a></h4>
                  </div>
                  <div id="collapseClassPackage-{{ class_package_id }}" class="panel-collapse collapse">
                    <div class="panel-banner" style="background-image: url('{{ file_url(class_package.term['#taxonomy_term'].field_vih_cp_image.entity.fileuri) }}');">
                      <div class="banner-spacer"></div>
                      <div class="diagonal-end"></div>
                    </div>
                    <div class="panel-body term-body">
                      {{ class_package.term }}
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
        </div>


      </div>

      <div class="row lc-btn-box">
        <div class="col-xs-12">
          <a href="{{ url('vih_subscription.long_course_order_create', {'course': node.id}) }} " class="btn-arrow btn-center">{{ "Begynd nu"|trans }}</a>
        </div>
      </div>

      <div class="row lc-contact-box">
        <div class="col-xs-12">
          <h4>{{ 'Har du spørgsmal til kurset?'|trans }}</h4>
          {{ content.field_vih_cource_contact_person }}
        </div>
      </div>

      <div class="row lc-price-box">
        <div class="col-xs-12">
          <h4>{{ "Prisoversigt"|trans }}:</h4>


          <div class="price-table col-sm-12 col-md-4">
            <div class="table-heading">
              {{ "Materialegebyr"|trans }}
            </div>
            <div class="table-cell">
              {{ content.field_vih_course_price }}
            </div>
          </div>
          <div class="price-table col-sm-12 col-md-4">
            <div class="table-heading">
              {{ "Tilmeldingsgebyr"|trans }}
            </div>
            <div class="table-cell">
              {{ content.field_vih_course_subsc_price }}
            </div>
          </div>
          <div class="price-table col-sm-12 col-md-4">
            <div class="table-heading">
              {{ "Ugebetaling"|trans }}
            </div>
            <div class="table-cell">
              {{ content.field_vih_course_week_price }}
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="row paragraphs">
      {{ content.field_paragraphs }}
    </div>
  </div>

</article>
