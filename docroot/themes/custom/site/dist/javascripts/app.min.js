"use strict";!function(t){var e=function(e){this.element=t(e)};function o(o){return this.each(function(){var i=t(this),n=i.data("bs.tab");n||i.data("bs.tab",n=new e(this)),"string"==typeof o&&n[o]()})}e.VERSION="3.3.7",e.TRANSITION_DURATION=150,e.prototype.show=function(){var e=this.element,o=e.closest("ul:not(.dropdown-menu)"),i=e.data("target");if(i||(i=(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var n=o.find(".active:last a"),s=t.Event("hide.bs.tab",{relatedTarget:e[0]}),a=t.Event("show.bs.tab",{relatedTarget:n[0]});if(n.trigger(s),e.trigger(a),!a.isDefaultPrevented()&&!s.isDefaultPrevented()){var r=t(i);this.activate(e.closest("li"),o),this.activate(r,r.parent(),function(){n.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:n[0]})})}}},e.prototype.activate=function(o,i,n){var s=i.find("> .active"),a=n&&t.support.transition&&(s.length&&s.hasClass("fade")||!!i.find("> .fade").length);function r(){s.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),o.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),a?(o[0].offsetWidth,o.addClass("in")):o.removeClass("fade"),o.parent(".dropdown-menu").length&&o.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),n&&n()}s.length&&a?s.one("bsTransitionEnd",r).emulateTransitionEnd(e.TRANSITION_DURATION):r(),s.removeClass("in")};var i=t.fn.tab;t.fn.tab=o,t.fn.tab.Constructor=e,t.fn.tab.noConflict=function(){return t.fn.tab=i,this};var n=function(e){e.preventDefault(),o.call(t(this),"show")};t(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',n).on("click.bs.tab.data-api",'[data-toggle="pill"]',n)}(jQuery);var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t){var e=function e(o,i){this.$element=t(o),this.options=t.extend({},e.DEFAULTS,i),this.$trigger=t('[data-toggle="collapse"][href="#'+o.id+'"],[data-toggle="collapse"][data-target="#'+o.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};function o(e){var o,i=e.attr("data-target")||(o=e.attr("href"))&&o.replace(/.*(?=#[^\s]+$)/,"");return t(i)}function i(o){return this.each(function(){var i=t(this),n=i.data("bs.collapse"),s=t.extend({},e.DEFAULTS,i.data(),"object"==(void 0===o?"undefined":_typeof(o))&&o);!n&&s.toggle&&/show|hide/.test(o)&&(s.toggle=!1),n||i.data("bs.collapse",n=new e(this,s)),"string"==typeof o&&n[o]()})}e.VERSION="3.3.7",e.TRANSITION_DURATION=350,e.DEFAULTS={toggle:!0},e.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},e.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var o,n=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(n&&n.length&&(o=n.data("bs.collapse"))&&o.transitioning)){var s=t.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){n&&n.length&&(i.call(n,"hide"),o||n.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return r.call(this);var l=t.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",t.proxy(r,this)).emulateTransitionEnd(e.TRANSITION_DURATION)[a](this.$element[0][l])}}}},e.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var o=t.Event("hide.bs.collapse");if(this.$element.trigger(o),!o.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};if(!t.support.transition)return n.call(this);this.$element[i](0).one("bsTransitionEnd",t.proxy(n,this)).emulateTransitionEnd(e.TRANSITION_DURATION)}}},e.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},e.prototype.getParent=function(){return t(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(t.proxy(function(e,i){var n=t(i);this.addAriaAndCollapsedClass(o(n),n)},this)).end()},e.prototype.addAriaAndCollapsedClass=function(t,e){var o=t.hasClass("in");t.attr("aria-expanded",o),e.toggleClass("collapsed",!o).attr("aria-expanded",o)};var n=t.fn.collapse;t.fn.collapse=i,t.fn.collapse.Constructor=e,t.fn.collapse.noConflict=function(){return t.fn.collapse=n,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(e){var n=t(this);n.attr("data-target")||e.preventDefault();var s=o(n),a=s.data("bs.collapse")?"toggle":n.data();i.call(s,a)})}(jQuery),function(t){t.fn.emulateTransitionEnd=function(e){var o=!1,i=this;t(this).one("bsTransitionEnd",function(){o=!0});return setTimeout(function(){o||t(i).trigger(t.support.transition.end)},e),this},t(function(){t.support.transition=function(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var o in e)if(void 0!==t.style[o])return{end:e[o]};return!1}(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){if(t(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}})})}(jQuery);_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t){var e=function(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",t,e)};e.VERSION="3.3.7",e.TRANSITION_DURATION=150,e.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},e.prototype.init=function(e,o,i){if(this.enabled=!0,this.type=e,this.$element=t(o),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&t(t.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var n=this.options.trigger.split(" "),s=n.length;s--;){var a=n[s];if("click"==a)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=a){var r="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(r+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},e.prototype.getDefaults=function(){return e.DEFAULTS},e.prototype.getOptions=function(e){return(e=t.extend({},this.getDefaults(),this.$element.data(),e)).delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},e.prototype.getDelegateOptions=function(){var e={},o=this.getDefaults();return this._options&&t.each(this._options,function(t,i){o[t]!=i&&(e[t]=i)}),e},e.prototype.enter=function(e){var o=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);if(o||(o=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,o)),e instanceof t.Event&&(o.inState["focusin"==e.type?"focus":"hover"]=!0),o.tip().hasClass("in")||"in"==o.hoverState)o.hoverState="in";else{if(clearTimeout(o.timeout),o.hoverState="in",!o.options.delay||!o.options.delay.show)return o.show();o.timeout=setTimeout(function(){"in"==o.hoverState&&o.show()},o.options.delay.show)}},e.prototype.isInStateTrue=function(){for(var t in this.inState)if(this.inState[t])return!0;return!1},e.prototype.leave=function(e){var o=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);if(o||(o=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,o)),e instanceof t.Event&&(o.inState["focusout"==e.type?"focus":"hover"]=!1),!o.isInStateTrue()){if(clearTimeout(o.timeout),o.hoverState="out",!o.options.delay||!o.options.delay.hide)return o.hide();o.timeout=setTimeout(function(){"out"==o.hoverState&&o.hide()},o.options.delay.hide)}},e.prototype.show=function(){var o=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(o);var i=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(o.isDefaultPrevented()||!i)return;var n=this,s=this.tip(),a=this.getUID(this.type);this.setContent(),s.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&s.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,s[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,d=l.test(r);d&&(r=r.replace(l,"")||"top"),s.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?s.appendTo(this.options.container):s.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var p=this.getPosition(),h=s[0].offsetWidth,c=s[0].offsetHeight;if(d){var f=r,u=this.getPosition(this.$viewport);r="bottom"==r&&p.bottom+c>u.bottom?"top":"top"==r&&p.top-c<u.top?"bottom":"right"==r&&p.right+h>u.width?"left":"left"==r&&p.left-h<u.left?"right":r,s.removeClass(f).addClass(r)}var m=this.getCalculatedOffset(r,p,h,c);this.applyPlacement(m,r);var g=function(){var t=n.hoverState;n.$element.trigger("shown.bs."+n.type),n.hoverState=null,"out"==t&&n.leave(n)};t.support.transition&&this.$tip.hasClass("fade")?s.one("bsTransitionEnd",g).emulateTransitionEnd(e.TRANSITION_DURATION):g()}},e.prototype.applyPlacement=function(e,o){var i=this.tip(),n=i[0].offsetWidth,s=i[0].offsetHeight,a=parseInt(i.css("margin-top"),10),r=parseInt(i.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(r)&&(r=0),e.top+=a,e.left+=r,t.offset.setOffset(i[0],t.extend({using:function(t){i.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),i.addClass("in");var l=i[0].offsetWidth,d=i[0].offsetHeight;"top"==o&&d!=s&&(e.top=e.top+s-d);var p=this.getViewportAdjustedDelta(o,e,l,d);p.left?e.left+=p.left:e.top+=p.top;var h=/top|bottom/.test(o),c=h?2*p.left-n+l:2*p.top-s+d,f=h?"offsetWidth":"offsetHeight";i.offset(e),this.replaceArrow(c,i[0][f],h)},e.prototype.replaceArrow=function(t,e,o){this.arrow().css(o?"left":"top",50*(1-t/e)+"%").css(o?"top":"left","")},e.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},e.prototype.hide=function(o){var i=this,n=t(this.$tip),s=t.Event("hide.bs."+this.type);function a(){"in"!=i.hoverState&&n.detach(),i.$element&&i.$element.removeAttr("aria-describedby").trigger("hidden.bs."+i.type),o&&o()}if(this.$element.trigger(s),!s.isDefaultPrevented())return n.removeClass("in"),t.support.transition&&n.hasClass("fade")?n.one("bsTransitionEnd",a).emulateTransitionEnd(e.TRANSITION_DURATION):a(),this.hoverState=null,this},e.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},e.prototype.hasContent=function(){return this.getTitle()},e.prototype.getPosition=function(e){var o=(e=e||this.$element)[0],i="BODY"==o.tagName,n=o.getBoundingClientRect();null==n.width&&(n=t.extend({},n,{width:n.right-n.left,height:n.bottom-n.top}));var s=window.SVGElement&&o instanceof window.SVGElement,a=i?{top:0,left:0}:s?null:e.offset(),r={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},l=i?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},n,r,l,a)},e.prototype.getCalculatedOffset=function(t,e,o,i){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-o/2}:"top"==t?{top:e.top-i,left:e.left+e.width/2-o/2}:"left"==t?{top:e.top+e.height/2-i/2,left:e.left-o}:{top:e.top+e.height/2-i/2,left:e.left+e.width}},e.prototype.getViewportAdjustedDelta=function(t,e,o,i){var n={top:0,left:0};if(!this.$viewport)return n;var s=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(t)){var r=e.top-s-a.scroll,l=e.top+s-a.scroll+i;r<a.top?n.top=a.top-r:l>a.top+a.height&&(n.top=a.top+a.height-l)}else{var d=e.left-s,p=e.left+s+o;d<a.left?n.left=a.left-d:p>a.right&&(n.left=a.left+a.width-p)}return n},e.prototype.getTitle=function(){var t=this.$element,e=this.options;return t.attr("data-original-title")||("function"==typeof e.title?e.title.call(t[0]):e.title)},e.prototype.getUID=function(t){do{t+=~~(1e6*Math.random())}while(document.getElementById(t));return t},e.prototype.tip=function(){if(!this.$tip&&(this.$tip=t(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},e.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},e.prototype.enable=function(){this.enabled=!0},e.prototype.disable=function(){this.enabled=!1},e.prototype.toggleEnabled=function(){this.enabled=!this.enabled},e.prototype.toggle=function(e){var o=this;e&&((o=t(e.currentTarget).data("bs."+this.type))||(o=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,o))),e?(o.inState.click=!o.inState.click,o.isInStateTrue()?o.enter(o):o.leave(o)):o.tip().hasClass("in")?o.leave(o):o.enter(o)},e.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type),t.$tip&&t.$tip.detach(),t.$tip=null,t.$arrow=null,t.$viewport=null,t.$element=null})};var o=t.fn.tooltip;t.fn.tooltip=function(o){return this.each(function(){var i=t(this),n=i.data("bs.tooltip"),s="object"==(void 0===o?"undefined":_typeof(o))&&o;!n&&/destroy|hide/.test(o)||(n||i.data("bs.tooltip",n=new e(this,s)),"string"==typeof o&&n[o]())})},t.fn.tooltip.Constructor=e,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=o,this}}(jQuery);_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t){var e=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");e.VERSION="3.3.7",e.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),e.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),e.prototype.constructor=e,e.prototype.getDefaults=function(){return e.DEFAULTS},e.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),o=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof o?"html":"append":"text"](o),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},e.prototype.hasContent=function(){return this.getTitle()||this.getContent()},e.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},e.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var o=t.fn.popover;t.fn.popover=function(o){return this.each(function(){var i=t(this),n=i.data("bs.popover"),s="object"==(void 0===o?"undefined":_typeof(o))&&o;!n&&/destroy|hide/.test(o)||(n||i.data("bs.popover",n=new e(this,s)),"string"==typeof o&&n[o]())})},t.fn.popover.Constructor=e,t.fn.popover.noConflict=function(){return t.fn.popover=o,this}}(jQuery);_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t){var e=function(e,o){this.options=o,this.$body=t(document.body),this.$element=t(e),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};function o(o,i){return this.each(function(){var n=t(this),s=n.data("bs.modal"),a=t.extend({},e.DEFAULTS,n.data(),"object"==(void 0===o?"undefined":_typeof(o))&&o);s||n.data("bs.modal",s=new e(this,a)),"string"==typeof o?s[o](i):a.show&&s.show(i)})}e.VERSION="3.3.7",e.TRANSITION_DURATION=300,e.BACKDROP_TRANSITION_DURATION=150,e.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},e.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},e.prototype.show=function(o){var i=this,n=t.Event("show.bs.modal",{relatedTarget:o});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){i.$element.one("mouseup.dismiss.bs.modal",function(e){t(e.target).is(i.$element)&&(i.ignoreBackdropClick=!0)})}),this.backdrop(function(){var n=t.support.transition&&i.$element.hasClass("fade");i.$element.parent().length||i.$element.appendTo(i.$body),i.$element.show().scrollTop(0),i.adjustDialog(),n&&i.$element[0].offsetWidth,i.$element.addClass("in"),i.enforceFocus();var s=t.Event("shown.bs.modal",{relatedTarget:o});n?i.$dialog.one("bsTransitionEnd",function(){i.$element.trigger("focus").trigger(s)}).emulateTransitionEnd(e.TRANSITION_DURATION):i.$element.trigger("focus").trigger(s)}))},e.prototype.hide=function(o){o&&o.preventDefault(),o=t.Event("hide.bs.modal"),this.$element.trigger(o),this.isShown&&!o.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(e.TRANSITION_DURATION):this.hideModal())},e.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){document===t.target||this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},e.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},e.prototype.resize=function(){this.isShown?t(window).on("resize.bs.modal",t.proxy(this.handleUpdate,this)):t(window).off("resize.bs.modal")},e.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},e.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},e.prototype.backdrop=function(o){var i=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var s=t.support.transition&&n;if(this.$backdrop=t(document.createElement("div")).addClass("modal-backdrop "+n).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",t.proxy(function(t){this.ignoreBackdropClick?this.ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide())},this)),s&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!o)return;s?this.$backdrop.one("bsTransitionEnd",o).emulateTransitionEnd(e.BACKDROP_TRANSITION_DURATION):o()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){i.removeBackdrop(),o&&o()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(e.BACKDROP_TRANSITION_DURATION):a()}else o&&o()},e.prototype.handleUpdate=function(){this.adjustDialog()},e.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},e.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},e.prototype.checkScrollbar=function(){var t=window.innerWidth;if(!t){var e=document.documentElement.getBoundingClientRect();t=e.right-Math.abs(e.left)}this.bodyIsOverflowing=document.body.clientWidth<t,this.scrollbarWidth=this.measureScrollbar()},e.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},e.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},e.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var i=t.fn.modal;t.fn.modal=o,t.fn.modal.Constructor=e,t.fn.modal.noConflict=function(){return t.fn.modal=i,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(e){var i=t(this),n=i.attr("href"),s=t(i.attr("data-target")||n&&n.replace(/.*(?=#[^\s]+$)/,"")),a=s.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(n)&&n},s.data(),i.data());i.is("a")&&e.preventDefault(),s.one("show.bs.modal",function(t){t.isDefaultPrevented()||s.one("hidden.bs.modal",function(){i.is(":visible")&&i.trigger("focus")})}),o.call(s,a,this)})}(jQuery);_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t){var e=!1;if("function"==typeof define&&define.amd&&(define(t),e=!0),"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&(module.exports=t(),e=!0),!e){var o=window.Cookies,i=window.Cookies=t();i.noConflict=function(){return window.Cookies=o,i}}}(function(){function t(){for(var t=0,e={};t<arguments.length;t++){var o=arguments[t];for(var i in o)e[i]=o[i]}return e}return function e(o){function i(e,n,s){var a;if("undefined"!=typeof document){if(arguments.length>1){if("number"==typeof(s=t({path:"/"},i.defaults,s)).expires){var r=new Date;r.setMilliseconds(r.getMilliseconds()+864e5*s.expires),s.expires=r}s.expires=s.expires?s.expires.toUTCString():"";try{a=JSON.stringify(n),/^[\{\[]/.test(a)&&(n=a)}catch(t){}n=o.write?o.write(n,e):encodeURIComponent(String(n)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=(e=(e=encodeURIComponent(String(e))).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent)).replace(/[\(\)]/g,escape);var l="";for(var d in s)s[d]&&(l+="; "+d,!0!==s[d]&&(l+="="+s[d]));return document.cookie=e+"="+n+l}e||(a={});for(var p=document.cookie?document.cookie.split("; "):[],h=/(%[0-9A-Z]{2})+/g,c=0;c<p.length;c++){var f=p[c].split("="),u=f.slice(1).join("=");this.json||'"'!==u.charAt(0)||(u=u.slice(1,-1));try{var m=f[0].replace(h,decodeURIComponent);if(u=o.read?o.read(u,m):o(u,m)||u.replace(h,decodeURIComponent),this.json)try{u=JSON.parse(u)}catch(t){}if(e===m){a=u;break}e||(a[m]=u)}catch(t){}}return a}}return i.set=i,i.get=function(t){return i.call(i,t)},i.getJSON=function(){return i.apply({json:!0},[].slice.call(arguments))},i.defaults={},i.remove=function(e,o){i(e,"",t(o,{expires:-1}))},i.withConverter=e,i}(function(){})}),function(t){var e;t.fn.slinky=function(o){var i=t.extend({label:"Back",title:!1,speed:300,resize:!0,activeClass:"active",headerClass:"header",headingTag:"<h2>",backFirst:!1},o),n=t(this),s=n.children().first();n.addClass("slinky-menu");var a=function(t,e){var o=Math.round(parseInt(s.get(0).style.left))||0;s.css("left",o-100*t+"%"),"function"==typeof e&&setTimeout(e,i.speed)},r=function(t){n.height(t.outerHeight())},l=function(t){n.css("transition-duration",t+"ms"),s.css("transition-duration",t+"ms")};if(l(i.speed),t("a + ul",n).prev().addClass("next"),t("li > ul",n).prepend('<li class="'+i.headerClass+'">'),!0===i.title&&t("li > ul",n).each(function(){var e=t(this).parent().find("a").first(),o=e.text(),n=t("<a>").addClass("title").text(o).attr("href",e.attr("href"));t("> ."+i.headerClass,this).append(n)}),i.title||!0!==i.label){var d=t("<a>").text(i.label).prop("href","#").addClass("back");i.backFirst?t("."+i.headerClass,n).prepend(d):t("."+i.headerClass,n).append(d)}else t("li > ul",n).each(function(){var e=t(this).parent().find("a").first().text(),o=t("<a>").text(e).prop("href","#").addClass("back");i.backFirst?t("> ."+i.headerClass,this).prepend(o):t("> ."+i.headerClass,this).append(o)});t("a",n).on("click",function(o){if(e+i.speed>Date.now())return!1;e=Date.now();var s=t(this);(s.hasClass("next")||s.hasClass("back"))&&o.preventDefault(),s.hasClass("next")?(n.find("."+i.activeClass).removeClass(i.activeClass),s.next().show().addClass(i.activeClass),a(1),i.resize&&r(s.next())):s.hasClass("back")&&(a(-1,function(){n.find("."+i.activeClass).removeClass(i.activeClass),s.parent().parent().hide().parentsUntil(n,"ul").first().addClass(i.activeClass)}),i.resize&&r(s.parent().parent().parentsUntil(n,"ul")))}),this.jump=function(e,o){e=t(e);var s=n.find("."+i.activeClass);s=s.length>0?s.parentsUntil(n,"ul").length:0,n.find("ul").removeClass(i.activeClass).hide();var d=e.parentsUntil(n,"ul");d.show(),e.show().addClass(i.activeClass),!1===o&&l(0),a(d.length-s),i.resize&&r(e),!1===o&&l(i.speed)},this.home=function(e){!1===e&&l(0);var o=n.find("."+i.activeClass),s=o.parentsUntil(n,"li").length;s>0&&(a(-s,function(){o.removeClass(i.activeClass)}),i.resize&&r(t(o.parentsUntil(n,"li").get(s-1)).parent())),!1===e&&l(i.speed)},this.destroy=function(){t("."+i.headerClass,n).remove(),t("a",n).removeClass("next").off("click"),n.removeClass("slinky-menu").css("transition-duration",""),s.css("transition-duration","")};var p=n.find("."+i.activeClass);return p.length>0&&(p.removeClass(i.activeClass),this.jump(p,!1)),this}}(jQuery);var layout=function(t){var e={},o=t(".layout__header"),i=t(".layout__document"),n={layout__wrapper:".layout__wrapper",layout__drawer:".layout__drawer",layout__header:".layout__header",layout__obfuscator:".layout__obfuscator",layout__document:".layout__document",wrapper_is_upgraded:"is-upgraded",wrapper_has_drawer:"has-drawer",wrapper_has_scrolling_header:"has-scrolling-header",header_scroll:"layout__header--scroll",header_is_compact:"is-compact",header_waterfall:"layout__header--waterfall",drawer_is_visible:"is-visible",obfuscator_is_visible:"is-visible"};return e.init=function(e){t("[data-toggle-drawer]").add(t(n.layout__obfuscator)).on("click touchstart",function(e){e.preventDefault(),function(t){var e=t.closest(n.layout__wrapper),o=e.children(n.layout__obfuscator),i=e.children(n.layout__drawer);o.toggleClass(n.obfuscator_is_visible),i.toggleClass(n.drawer_is_visible),i.attr("aria-hidden",!i.hasClass(n.drawer_is_visible))}(t(this))}),o.hasClass(n.header_waterfall)&&i.on("touchmove scroll",function(e){var o=t(this);!function(t){var e=t.closest(n.layout__wrapper).children(n.layout__header);t.scrollTop()>0?e.addClass(n.header_is_compact):e.removeClass(n.header_is_compact)}(o)}),t(n.layout__wrapper).each(function(e,o){var i=t(this),s=i.children(n.layout__header),a=i.children(n.layout__drawer);s.hasClass(n.header_scroll)&&i.addClass(n.wrapper_has_scrolling_header),a.length>0&&i.addClass(n.wrapper_has_drawer),i.length>0&&i.addClass(n.wrapper_is_upgraded)})},e}(jQuery);!function(t){var e=t(".modal");t("body").append(e),layout.init(),t(".slinky-menu").find("ul, li, a").removeClass(),t(".region-mobile-header-navigation .slinky-menu").slinky({title:!0,label:""}),t(".layout__content").find("table").addClass("table table-striped table-hover");var o=t(".notify");o.length&&o.each(function(e,o){var i=t(".layout__document"),n=t(".region-notify"),s=t(this),a="notify_id_"+s.attr("id"),r=s.find(".notify__close");s.css("display","flex").hide(),Cookies.get(a)||s.delay(2e3).fadeIn(function(){var t=n.outerHeight(!0);i.css("padding-bottom",t)}),r.on("click",function(t){s.fadeOut(function(){i.css("padding-bottom",0)}),Cookies.set(a,!0)})}),t("#toggle_mobile_menu").click(function(e){t("#main-menu").toggleClass("mobile-menu-open"),t(".layout__document").toggleClass("mobile-menu-open")}),t(".search-button").click(function(e){t("#search-form-popover").hasClass("hidden")&&(t("#search-form-popover").removeClass("hidden"),t(".form-control").focus())}),t(document).click(function(e){t(e.target).closest("#search-form-popover").length||t(e.target).closest(".search-button").length||t("#search-form-popover").hasClass("hidden")||t("#search-form-popover").addClass("hidden")}),"ontouchstart"in window?t("li.dropdown.layout-navigation__dropdown").find("> a").click(function(e){t(this).parent().hasClass("expanded")||(e.preventDefault(),t(this).parent().addClass("expanded"))}):t("li.dropdown.layout-navigation__dropdown").hover(function(e){t(this).addClass("expanded")},function(e){t(this).removeClass("expanded")}),t("[data-toggler]").on("click",function(e){e.preventDefault();var o=t(this),i=o.attr("data-toggler"),n=o.parents(".toggler"),s=n.find(i),a=n.find("[data-toggler]"),r=n.find('[data-toggler="'+i+'"]'),l=n.find(".toggler__content");a.parent().removeClass("active"),l.removeClass("active"),r.parent().addClass("active"),s.addClass("active")}),t(".toggler").each(function(e){t(this).find(".toggler__button").first().trigger("click")}),t(document).on({"show.bs.modal":function(){var e=1040+10*t(".modal:visible").length;t(this).css("z-index",e),setTimeout(function(){t(".modal-backdrop").not(".modal-stack").css("z-index",e-1).addClass("modal-stack")},0)},"hidden.bs.modal":function(){t(".modal:visible").length>0&&setTimeout(function(){t(document.body).addClass("modal-open")},0)}},".modal")}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
